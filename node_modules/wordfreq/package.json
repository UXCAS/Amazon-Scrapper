{
  "name": "wordfreq",
  "version": "0.1.0-dev",
  "description": "Text corpus calculation in Javascript.",
  "main": "./src/wordfreq.worker.js",
  "bin": {
    "wordfreq": "./src/wordfreq.cli.js"
  },
  "preferGlobal": true,
  "engines": {
    "node": ">=0.8.0"
  },
  "dependencies": {
    "optimist": "~0.3.5"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/timdream/wordfreq.git"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://raw.github.com/timdream/wordfreq/master/LICENSE"
    }
  ],
  "keywords": [
    "cli",
    "corpus",
    "keyword"
  ],
  "author": {
    "name": "Timothy Guan-tin Chien",
    "email": "timdream@gmail.com",
    "url": "http://timdream.org/"
  },
  "maintainers": [
    {
      "name": "timdream",
      "email": "timdream@gmail.com"
    }
  ],
  "readme": "# wordfreq\n\n[Text corpus](https://en.wikipedia.org/wiki/Text_corpus) calculation in Javascript. \nSupports Chinese, English.\nSee [demo](http://timdream.org/wordfreq/).\n\nThis library is a spin-off project from [HTML5 Word Cloud](https://github.com/timdream/wordcloud).\n\n## Simple usage\n\nLoad `wordfreq.js` script to the web page, and run:\n\n    // Create an options object for initialization\n    var options = {\n      workerUrl: 'path/to/wordfreq.worker.js' };\n    // Initialize and run process() function\n    var wordfreq = WordFreq(options).process(text, function (list) {\n      // console.log the list returned in this callback.\n      console.log(list);\n    });\n\n`WordFreq()` methods are chainable, for example,\n\n    // Process 3 strings and get corpus of all the texts.\n    WordFreq(options)\n      .process(text).process(text2).process(text3)\n      .getList(function (list) {\n        console.log(list);\n      });\n\nTo use this library synchronously, load `wordfreq.worker.js` and use the `WordFreqSync` interface. Check `API.md` for available options and methods.\n\n### Command-line interface\n\nCommand-line interface is available, powered by [Node.js](http://nodejs.org/). To install globally, run\n\n    npm install -g wordfreq\n\nExample usage:\n\n    wordfreq ~/mypost.txt | less\n    cat ~/mypost.txt | wordfreq - | less\n\n## Algorithm \n\nCorpus is calculated with a simple N-gram algorithm and sub-string filter. \nHere is [an article](http://www.openfoundry.org/tw/foss-forum/8339--open-web-html5-) in Traditional Chinese on how HTML5 Word Cloud is being done.\n\n[Porter Stemming Algorithm](http://tartarus.org/~martin/PorterStemmer/) is included for processing English.\n\n## Testing\n\nTo run tests, first you would need to pull the required QUnit library by running\n\n    git submodule init\n    git submodule update\n\nThen, start a localhost HTTP server, for example,\n\n    python -m SimpleHTTPServer 8009\n\nPoint your browser to [http://localhost:8009/test/](http://localhost:8009/test/) to start testing.\n\nYou may also run the tests with PhantomJS by running\n\n    phantomjs test/qunit/addons/phantomjs/runner.js http://localhost:8009/test/\n\nYou will find all the information you need to write testcases on the [QUnit](http://qunitjs.com) website.\nAll non-trivial code submission are expected to accompany with testcases.\n\n**Known Gecko issue**: The testcases will make Firefox choke; Web Worker will stop working after a few reloads. \nThis was since fixed in [bug 785248](https://bugzilla.mozilla.org/show_bug.cgi?id=785248) on Oct. 3, 2012, so use Firefox 18 (currently [Aurora](https://www.mozilla.org/firefox/aurora/)) instead for testing.\n\n### travis-ci.org Status\n\nPhantomJS on Travis-CI exhibits random hang, results random falling test result; but here is the badge: \n\n[![Build Status](https://secure.travis-ci.org/timdream/wordfreq.png)](http://travis-ci.org/timdream/wordfreq)",
  "readmeFilename": "README.md",
  "_id": "wordfreq@0.1.0-dev",
  "dist": {
    "shasum": "040b46bc66685ea33ba66a42fad6e500eb0fd0aa",
    "tarball": "http://registry.npmjs.org/wordfreq/-/wordfreq-0.1.0-dev.tgz"
  },
  "_npmVersion": "1.1.65",
  "_npmUser": {
    "name": "timdream",
    "email": "timdream@gmail.com"
  },
  "directories": {},
  "_shasum": "040b46bc66685ea33ba66a42fad6e500eb0fd0aa",
  "_resolved": "https://registry.npmjs.org/wordfreq/-/wordfreq-0.1.0-dev.tgz",
  "_from": "wordfreq@*",
  "bugs": {
    "url": "https://github.com/timdream/wordfreq/issues"
  },
  "homepage": "https://github.com/timdream/wordfreq#readme"
}
